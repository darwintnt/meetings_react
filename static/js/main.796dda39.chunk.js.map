{"version":3,"sources":["components/modules/Form.js","components/modules/CardMeeting.js","components/modules/ListMeeting.js","components/modules/Meeting.js","serviceWorker.js","index.js"],"names":["Form","datePicker","React","createRef","timePicker","petName","ownerName","comment","dateInputFields","flatpickr","_this","current","dateFormat","minDate","weekNumbers","enableTime","noCalendar","addMetting","e","preventDefault","date","value","time","Swal","fire","data","id","uuid","props","createMeeting","currentTarget","reset","this","react_default","a","createElement","className","onSubmit","type","ref","Component","CardMeeting","deleteMeeting","delete","_this$props$data","library","add","faBan","ListMeeting","citas","meetingsNumber","Object","keys","length","concat","react_fontawesome_index_es","icon","size","color","map","cita","modules_CardMeeting","key","Metting","state","meetings","newMeeting","citation","toConsumableArray","setState","filter","meeting","meetingsLS","localStorage","getItem","JSON","parse","setItem","stringify","modules_Form","modules_ListMeeting","Boolean","window","location","hostname","match","ReactDOM","render","Meeting","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mSAyHeA,6MAhHZC,WAAcC,IAAMC,cACpBC,WAAcF,IAAMC,cACpBE,QAAcH,IAAMC,cACpBG,UAAcJ,IAAMC,cACpBI,QAAcL,IAAMC,cAOpBK,gBAAkB,WACfC,IAAUC,EAAKT,WAAWU,QAAS,CAChCC,WAAY,QACZC,QAAS,QACTC,aAAa,IAGhBL,IAAUC,EAAKN,WAAWO,QAAS,CAChCI,YAAY,EACZC,YAAY,EACZJ,WAAY,WAIlBK,WAAa,SAACC,GAEXA,EAAEC,iBAEF,IAAMC,EAAOV,EAAKT,WAAWU,QAAQU,MAC/BC,EAAOZ,EAAKN,WAAWO,QAAQU,MAC/BhB,EAAUK,EAAKL,QAAQM,QAAQU,MAC/Bf,EAAYI,EAAKJ,UAAUK,QAAQU,MACnCd,EAAUG,EAAKH,QAAQI,QAAQU,MAErC,GAAY,KAATD,GAAwB,KAATE,GAA0B,KAAZjB,GAAgC,KAAdC,GAAgC,KAAZC,EACnEgB,IAAKC,KACF,QACA,oCACA,aAEC,CAEJ,IAAMC,EAAO,CACVC,GAAKC,MACLP,OACAE,OACAjB,UACAC,YACAC,WAGHG,EAAKkB,MAAMC,cAAcJ,GAEzBP,EAAEY,cAAcC,6FA9CpBC,KAAKxB,mDAsDJ,OAEGyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACTH,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,QAAME,SAAUL,KAAKf,YAClBgB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BAAd,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBAAjB,kBACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWE,KAAK,OAAOC,IAAKP,KAAK3B,WAGrD4B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBAAjB,mBACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWE,KAAK,OAAOC,IAAKP,KAAK1B,aAGrD2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CAEZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBAAjB,SACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWE,KAAK,OAAOC,IAAKP,KAAK/B,cAGrDgC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBAAjB,QACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWE,KAAK,OAAOC,IAAKP,KAAK5B,eAKxD6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBAAjB,YACAH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,cAAcG,IAAKP,KAAKzB,WAG/C0B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8DAAlB,qBAnGFI,aCyCJC,6MA3CZC,cAAgB,SAAAxB,GACbA,EAAEC,iBACFT,EAAKkB,MAAMe,OAAOjC,EAAKkB,MAAMH,KAAKC,6EAI7B,IAAAkB,EAE6CZ,KAAKJ,MAAMH,KAAtDpB,EAFFuC,EAEEvC,QAASC,EAFXsC,EAEWtC,UAAWc,EAFtBwB,EAEsBxB,KAAME,EAF5BsB,EAE4BtB,KAAMf,EAFlCqC,EAEkCrC,QAEvC,OAEG0B,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,QAAME,SAAUL,KAAKU,eAClBT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0DACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiB/B,GAC/B4B,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,sBAAW7B,GACX2B,EAAAC,EAAAC,cAAA,mBAAWf,GACXa,EAAAC,EAAAC,cAAA,kBAAUb,GACVW,EAAAC,EAAAC,cAAA,sBAAc5B,IAEjB0B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6CAAlB,oBAxBQI,oCCI1BK,IAAQC,IAAIC,SA4CGC,mLAxCJ,IAAAtC,EAAAsB,KAECiB,EAAQjB,KAAKJ,MAAMqB,MAEnBC,EAA+C,IAA9BC,OAAOC,KAAKH,GAAOI,OAAe,GAAK,YAG9D,OAEGpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BAAd,kBAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAkB,OAAoBJ,IAC/BjB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAiBC,KAAK,MAAMC,KAAK,KAAKC,MAAM,QAC5CzB,EAAAC,EAAAC,cAAA,wCAGHF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CAEbe,OAAOC,KAAKpB,KAAKJ,MAAMqB,OAAOU,IAAK,SAAAC,GAAI,OACtC3B,EAAAC,EAAAC,cAAC0B,EAAD,CACGC,IAAKF,EACLnC,KAAMf,EAAKkB,MAAMqB,MAAMW,GACvBjB,OAAQjC,EAAKkB,MAAMe,oBAzBXH,aCgFXuB,6MAjFZC,MAAQ,CACLC,SAAW,MAqBdpC,cAAgB,SAACqC,GAEd,IAAMC,EAAQ,GAAAb,OAAAH,OAAAiB,EAAA,EAAAjB,CAAOzC,EAAKsD,MAAMC,UAAlB,CAA4BC,IAE1CxD,EAAK2D,SAAS,CACXJ,SAAWE,OAKjBzB,cAAgB,SAAChB,GAEd,IAEMuC,EAFcd,OAAAiB,EAAA,EAAAjB,CAAOzC,EAAKsD,MAAMC,UAENK,OAAQ,SAAAC,GAAO,OAAIA,EAAQ7C,KAAOA,IAElEhB,EAAK2D,SAAS,CACXJ,SAAWA,wFAjCd,IAAMO,EAAaC,aAAaC,QAAQ,YAErCF,GACAxC,KAAKqC,SAAS,CACXJ,SAAUU,KAAKC,MAAMJ,kDAO3BC,aAAaI,QACV,WAAYF,KAAKG,UAAU9C,KAAKgC,MAAMC,4CA8BzC,OAEGhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAEZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,mCAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CAEZH,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACZH,EAAAC,EAAAC,cAAC4C,EAAD,CAAMlD,cAAeG,KAAKH,kBAKhCI,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACZH,EAAAC,EAAAC,cAAC6C,EAAD,CACG/B,MAAOjB,KAAKgC,MAAMC,SAClBtB,OAAQX,KAAKU,2BArEfF,aCMFyC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAAaC,SAASC,eAAe,SD2H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.796dda39.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport flatpickr from '../../../node_modules/flatpickr/dist/flatpickr';\r\nimport uuid from 'uuid';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Form extends Component {\r\n\r\n   datePicker  = React.createRef();\r\n   timePicker  = React.createRef();\r\n   petName     = React.createRef();\r\n   ownerName   = React.createRef();\r\n   comment     = React.createRef();\r\n\r\n\r\n   componentDidMount() {\r\n     this.dateInputFields();\r\n   }\r\n\r\n   dateInputFields = () => {\r\n      flatpickr(this.datePicker.current, {\r\n         dateFormat: \"Y-m-d\",\r\n         minDate: 'today',\r\n         weekNumbers: true\r\n      });\r\n\r\n      flatpickr(this.timePicker.current, {\r\n         enableTime: true,\r\n         noCalendar: true,\r\n         dateFormat: \"H:i\",\r\n      });\r\n   }\r\n\r\n   addMetting = (e) => {\r\n\r\n      e.preventDefault();\r\n\r\n      const date = this.datePicker.current.value,\r\n            time = this.timePicker.current.value,\r\n            petName = this.petName.current.value,\r\n            ownerName = this.ownerName.current.value,\r\n            comment = this.comment.current.value\r\n\r\n      if(date === '' || time === ''|| petName === '' || ownerName === '' || comment === ''){\r\n         Swal.fire(\r\n            'Error',\r\n            'Todos los campos son obligatorios',\r\n            'error'\r\n         )\r\n      } else {\r\n\r\n         const data = {\r\n            id : uuid(),\r\n            date,\r\n            time,\r\n            petName,\r\n            ownerName,\r\n            comment\r\n         }\r\n   \r\n         this.props.createMeeting(data);\r\n   \r\n         e.currentTarget.reset();\r\n\r\n      }\r\n\r\n   }\r\n\r\n   render(){\r\n\r\n      return(\r\n\r\n         <div className=\"uk-padding\">\r\n               <div>\r\n                  <form onSubmit={this.addMetting}>\r\n                     <h3 className=\"uk-text-lead uk-text-center\">Agregar Cita</h3>\r\n                     <div className=\"uk-form-controls\">\r\n                        <label className=\"uk-form-label\">Nombre Mascota</label>\r\n                        <input className=\"uk-input\" type=\"text\" ref={this.petName} />            \r\n                     </div>\r\n\r\n                     <div className=\"uk-form-controls\">\r\n                        <label className=\"uk-form-label\">Nombre Dueño</label>\r\n                        <input className=\"uk-input\" type=\"text\" ref={this.ownerName} />            \r\n                     </div>\r\n\r\n                     <div className=\"uk-child-width-1-2@m uk-grid uk-grid-small\">\r\n\r\n                        <div className=\"uk-form-controls\">\r\n                           <label className=\"uk-form-label\">Fecha</label>\r\n                           <input className=\"uk-input\" type=\"text\" ref={this.datePicker} />            \r\n                        </div>\r\n\r\n                        <div className=\"uk-form-controls\">\r\n                           <label className=\"uk-form-label\">Hora</label>\r\n                           <input className=\"uk-input\" type=\"text\" ref={this.timePicker} />            \r\n                        </div>\r\n\r\n                     </div>\r\n\r\n                     <div className=\"uk-form-controls\">\r\n                        <label className=\"uk-form-label\">Sintomas</label>\r\n                        <textarea className=\"uk-textarea\" ref={this.comment} />            \r\n                     </div>\r\n\r\n                     <button className=\"uk-width-1-1@m uk-button uk-button-primary uk-margin-small\">Agregar</button>\r\n\r\n                  </form>\r\n               </div>\r\n\r\n            </div>\r\n      )\r\n   }\r\n\r\n}\r\n\r\nForm.propTypes = {\r\n   createMeeting: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CardMeeting extends Component {\r\n\r\n   deleteMeeting = e => {\r\n      e.preventDefault();\r\n      this.props.delete(this.props.data.id);\r\n      \r\n   }\r\n\r\n   render(){\r\n\r\n      const {petName, ownerName, date, time, comment} = this.props.data;\r\n\r\n      return(         \r\n\r\n         <div>\r\n            <form onSubmit={this.deleteMeeting}>\r\n               <div className=\"uk-card uk-card-default uk-card-hover uk-padding-small\">\r\n                  <h3 className=\"uk-card-title\">{petName}</h3>\r\n                  <div>\r\n                     <p>Dueño: {ownerName}</p>\r\n                     <p>Fecha: {date}</p>\r\n                     <p>Hora: {time}</p>\r\n                     <p>Sintomas: {comment}</p>\r\n                  </div>\r\n                  <button className=\"uk-button uk-button-danger uk-width-1-1@m\">Borrar</button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n\r\n      )\r\n   }\r\n\r\n}\r\n\r\nCardMeeting.propTypes = {\r\n   data: PropTypes.shape({\r\n      ownerName: PropTypes.string.isRequired,\r\n      date: PropTypes.string.isRequired,\r\n      time: PropTypes.string.isRequired,\r\n      comment: PropTypes.string.isRequired\r\n   }),\r\n   \r\n   delete: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default CardMeeting","import React, { Component } from 'react';\r\nimport CardMeeting from '../modules/CardMeeting';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBan } from '@fortawesome/free-solid-svg-icons'\r\nimport PropTypes from 'prop-types';\r\n\r\nlibrary.add(faBan);\r\n\r\nclass ListMeeting extends Component {\r\n\r\n   render(){\r\n\r\n      const citas = this.props.citas;\r\n\r\n      const meetingsNumber = Object.keys(citas).length === 0 ? '' : 'uk-hidden';\r\n      \r\n\r\n      return(\r\n\r\n         <div className=\"card-padding-custom\">\r\n            <h3 className=\"uk-text-lead uk-text-center\">Lista de Citas</h3>\r\n\r\n            <div className={`uk-text-center ${meetingsNumber}`} >\r\n               <FontAwesomeIcon icon=\"ban\" size=\"6x\" color=\"red\" />\r\n               <p>No tiene citas programadas</p>\r\n            </div>\r\n\r\n            <div className=\"uk-child-width-1-2@m uk-grid uk-grid-small\">\r\n\r\n            { Object.keys(this.props.citas).map( cita => (\r\n               <CardMeeting \r\n                  key={cita}\r\n                  data={this.props.citas[cita]}\r\n                  delete={this.props.delete}\r\n               />\r\n            )) }\r\n\r\n            </div>\r\n            \r\n         </div>\r\n      )\r\n   }\r\n\r\n}\r\n\r\nListMeeting.propTypes = {\r\n   citas: PropTypes.array.isRequired,\r\n   delete: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ListMeeting","import React, { Component } from 'react';\r\nimport Form from '../modules/Form';\r\nimport ListMeeting from '../modules/ListMeeting';\r\n\r\n\r\n\r\nclass Metting extends Component {\r\n\r\n   state = {\r\n      meetings : []\r\n   }\r\n\r\n   componentDidMount(){\r\n\r\n      const meetingsLS = localStorage.getItem('meetings');\r\n\r\n      if(meetingsLS){\r\n         this.setState({\r\n            meetings: JSON.parse(meetingsLS)\r\n         })\r\n      }\r\n   }\r\n\r\n\r\n   componentDidUpdate() {\r\n      localStorage.setItem(\r\n         'meetings', JSON.stringify(this.state.meetings)\r\n      );\r\n   }\r\n\r\n   createMeeting = (newMeeting) => {\r\n\r\n      const citation = [...this.state.meetings, newMeeting];\r\n\r\n      this.setState({\r\n         meetings : citation,\r\n      });\r\n\r\n   }\r\n\r\n   deleteMeeting = (id) => {\r\n\r\n      const actualMeetings = [...this.state.meetings];\r\n\r\n      const meetings = actualMeetings.filter( meeting => meeting.id !== id );\r\n\r\n      this.setState({\r\n         meetings : meetings,\r\n      });\r\n\r\n\r\n      \r\n   }\r\n\r\n   render(){\r\n\r\n      return(\r\n\r\n         <div className=\"container uk-container-small\">\r\n\r\n            <h1 className=\"uk-text-center uk-h1\">Administrador Citas Veterinaria</h1>\r\n\r\n            <div className=\"uk-child-width-1-2@m uk-grid uk-grid-small\">               \r\n\r\n               <div>\r\n                  <div className=\"uk-card uk-card-default uk-margin\">\r\n                     <Form createMeeting={this.createMeeting} />               \r\n                  </div>\r\n               </div>\r\n            \r\n\r\n               <div>\r\n                  <div className=\"uk-card uk-card-default uk-margin\">\r\n                     <ListMeeting \r\n                        citas={this.state.meetings}\r\n                        delete={this.deleteMeeting}  \r\n                     />               \r\n                  </div>\r\n               </div>\r\n\r\n\r\n            </div>\r\n\r\n         </div>\r\n      )\r\n   }\r\n\r\n}\r\n\r\nexport default Metting","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/meeting.css';\nimport Meeting from './components/modules/Meeting';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Meeting />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}